AWSTemplateFormatVersion: '2010-09-09'
Description: CICD pipeline


Parameters:
  PipelineName:
    Type: String
    Description: Name of Pipeline (alphanumeric characters, dashes only, and 20 character limit)
    AllowedPattern: '[A-Za-z0-9\-]{1,20}'

  S3RootBucket:
    Type: String
    Description: S3 bucket where the cfn-templates and projects directories exist


Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub ${AWS::Region}-${AWS::AccountId}-${PipelineName}
      RoleArn: !GetAtt PipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref S3RootBucket
                S3ObjectKey: !Sub projects/${PipelineName}.yaml.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: Source
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build
              Configuration:
                ProjectName: !Sub ${PipelineName}-Build
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: Build
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub ${AWS::StackName}
                TemplatePath: !Sub Build::${PipelineName}.yaml
                Capabilities: CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt PipelineServiceRole.Arn
                ParameterOverrides: |
                  {
                    "TestParam": "${TEST_PARAM}"
                  }
    DependsOn:
      - CodeBuild

  CodeBuild:
    Type: AWS::CodeBuild::Project
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub ${PipelineName}-Build
      ServiceRole: !Sub ${PipelineName}-PipelineBuildServiceRole
      Source:
        Type: S3
        Location: !Sub ${S3RootBucket}/projects/${PipelineName}.yaml.zip
        BuildSpec: |
          version: 0.2

          phases:
            build:
              commands:
                - echo 'Listing out files...'
                - ls -lta
                - echo 'Quick test...'
                - export TEST_PARAM='lorem ipsum'
                - echo ${TEST_PARAM}
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: S3
        Location: !Sub ${AWS::Region}-${AWS::AccountId}-${PipelineName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
    DependsOn: PipelineBuildServiceRole

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: !Sub ${AWS::Region}-${AWS::AccountId}-${PipelineName}

  PipelineServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RoleName: !Sub ${PipelineName}-PipelineServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
                - s3.amazonaws.com
                - logs.amazonaws.com
                - iam.amazonaws.com
                - ec2.amazonaws.com
                - sts.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub project-pipeline-policy-${PipelineName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:UpdateProject
                  - cloudformation:*
                  - codepipeline:*
                  - iam:*
                  - s3:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:*
                  - sts:*
                  - secretsmanager:GetSecretValue
                Resource: "*"

  PipelineBuildServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RoleName: !Sub ${PipelineName}-PipelineBuildServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
                - s3.amazonaws.com
                - logs.amazonaws.com
                - iam.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub project-pipeline-build-policy-${PipelineName}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:UpdateProject
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - iam:PutRolePolicy
                Resource:
                  - !Sub arn:aws:s3:::${AWS::Region}-${AWS::AccountId}-${PipelineName}
                  - !Sub arn:aws:s3:::${AWS::Region}-${AWS::AccountId}-${PipelineName}/*
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${PipelineName}-Build
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${PipelineName}-Build:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${PipelineName}-Build
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${PipelineName}-Build:*
    DependsOn: S3Bucket